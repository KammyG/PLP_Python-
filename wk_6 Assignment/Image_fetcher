import requests
import os
from urllib.parse import urlparse
import hashlib

def fetch_image(url):
    """Fetch and save an image from a given URL into Fetched_Images directory."""
    try:
        # Create directory if it doesn't exist
        os.makedirs("Fetched_Images", exist_ok=True)

        # Fetch the image with headers for respectfulness
        headers = {"User-Agent": "UbuntuImageFetcher/1.0 (+https://ubuntu.com)"}
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()  # Raise exception for bad HTTP status codes

        # Check content type to ensure it's an image
        content_type = response.headers.get("Content-Type", "")
        if not content_type.startswith("image/"):
            print(f"✗ Skipping {url} (not an image, got {content_type})")
            return

        # Extract filename or generate one
        parsed_url = urlparse(url)
        filename = os.path.basename(parsed_url.path)
        if not filename:  # If URL has no filename, generate one using hash
            ext = content_type.split("/")[-1] or "jpg"
            filename = f"downloaded_{hashlib.md5(url.encode()).hexdigest()[:8]}.{ext}"

        filepath = os.path.join("Fetched_Images", filename)

        # Prevent duplicate downloads
        if os.path.exists(filepath):
            print(f"⚠ Duplicate skipped: {filename}")
            return

        # Save the image in binary mode
        with open(filepath, "wb") as f:
            f.write(response.content)

        print(f"✓ Successfully fetched: {filename}")
        print(f"✓ Image saved to {filepath}")

    except requests.exceptions.RequestException as e:
        print(f"✗ Connection error fetching {url}: {e}")
    except Exception as e:
        print(f"✗ An error occurred with {url}: {e}")

def main():
    print("Welcome to the Ubuntu Image Fetcher")
    print("A tool for mindfully collecting images from the web\n")

    # Allow multiple URLs separated by commas
    urls = input("Please enter one or more image URLs (comma separated): ").split(",")

    for url in [u.strip() for u in urls if u.strip()]:
        fetch_image(url)

    print("\nConnection strengthened. Community enriched. ✨")

if __name__ == "__main__":
    main()
